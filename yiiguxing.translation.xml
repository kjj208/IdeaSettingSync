<application>
  <component name="AppStorage">
    <histories>
      <item value="The size of the ArrayList (the number of elements it contains)." />
      <item value="Increments modCount!!" />
      <item value="Copies the specified array, truncating or padding with nulls (if necessary) * so the copy has the specified length. For all indices that are * valid in both the original array and the copy, the two arrays will * contain identical values. For any indices that are valid in the * copy but not the original, the copy will contain &lt;tt&gt;null&lt;/tt&gt;. * Such indices will exist if and only if the specified length * is greater than that of the original array. * The resulting array is of the class &lt;tt&gt;newType&lt;/tt&gt;." />
      <item value="the collection whose elements are to be placed into this list" />
      <item value="Constructs a list containing the elements of the specified * collection, in the order they are returned by the collection's * iterator." />
      <item value="Capacity" />
      <item value="Illegal" />
      <item value="Illegal Argument Exception" />
      <item value="Constructs an empty list with the specified initial capacity. * * @param initialCapacity the initial capacity of the list * @throws IllegalArgumentException if the specified initial capacity * is negative" />
      <item value="Constructs an empty list with an initial capacity of ten." />
      <item value="Add a resource handler for serving static resources based on the specified URL path patterns. * The handler will be invoked for every incoming request that matches to one of the specified * path patterns. * &lt;p&gt;Patterns like {@code &quot;/static/**&quot;} or {@code &quot;/css/{filename:\\w+\\.css}&quot;} are allowed. * See {@link org.springframework.util.AntPathMatcher} for more details on the syntax. * @return a {@link ResourceHandlerRegistration} to use to further configure the * registered resource handler" />
      <item value="Whether a resource handler has already been registered for the given path pattern." />
      <item value="Path pattern used for static resources." />
      <item value="Whether to enable default resource handling." />
      <item value="Candidate" />
      <item value="correct" />
      <item value="Return the auto-configuration class names that should be considered. By default * this method will load candidates using {@link SpringFactoriesLoader} with * {@link #getSpringFactoriesLoaderFactoryClass()}. * @param metadata the source metadata * @param attributes the {@link #getAttributes(AnnotationMetadata) annotation * attributes} * @return a list of candidate configurations" />
      <item value="mapped" />
      <item value="fetch" />
      <item value="Specification Executor" />
      <item value="nested exception is javax.persistence.RollbackException: Transaction marked as rollbackOnly" />
      <item value="referenced" />
      <item value="Specification" />
      <item value="org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection" />
      <item value="Jpa Repository" />
      <item value="Dialect" />
      <item value="Column" />
      <item value="Generated" />
      <item value="merge" />
      <item value="Persistence" />
      <item value="provider" />
      <item value="Scheduled" />
      <item value="Subject" />
      <item value="this will automatically fall back to building the docket when the build method is called" />
      <item value="automatically" />
      <item value="api selection builder. To complete building the api selector, the build method of the api selector * needs to be called, this will automatically fall back to building the docket when the build method is called." />
      <item value="term Of Service Url" />
      <item value="meta" />
      <item value="Configures the global io.swagger.model.SecurityScheme's applicable to all or some of the api * operations. The configuration of which operations have associated SecuritySchemes is configured with * springfox.swagger.plugins.Docket#securityContexts *" />
      <item value="Sets the api's meta information as included in the json ResourceListing response." />
      <item value="Add to the api's vendor extensions" />
      <item value="Documentation Type" />
      <item value="Meta" />
      <item value="A builder which is intended to be the primary interface into the Springfox framework. * Provides sensible defaults and convenience methods for configuration." />
      <item value="Would you like to install a shell script formatter?" />
      <item value="Permission" />
      <item value="Retrieved the correct value! [aValue]" />
      <item value="is Authenticated" />
      <item value="Retrieved the correct value!" />
      <item value="Retrieved" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="163" />
        <entry key="ENGLISH" value="164" />
        <entry key="CROATIAN" value="1" />
        <entry key="ROMANIAN" value="4" />
        <entry key="SPANISH" value="2" />
        <entry key="ITALIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>