<application>
  <component name="EasyCodeSetting">
    <option name="author" value="EasyCode Generate" />
    <option name="currTemplateGroupName" value="yhaf-6-21 plus" />
    <option name="templateGroupMap">
      <map>
        <entry key="Default">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;entity&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;实体类&quot;)&#10;// $!{tableInfo.obj}&#10;public class $!{tableInfo.name} implements Serializable {&#10;    private static final long serialVersionUID = $!tool.serial();&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})/**&#10;    * ${column.comment}&#10;    */#end&#10;&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;&#10;#foreach($column in $tableInfo.fullColumn)&#10;##使用宏定义实现get,set方法&#10;#getSetMethod($column)&#10;#end&#10;&#10;}" />
                    <option name="name" value="entity.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Dao&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/dao&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import org.apache.ibatis.annotations.Param;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 通过ID查询单条数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 实例对象&#10;     */&#10;    $!{tableInfo.name} queryById($!pk.shortType $!pk.name);&#10;&#10;    /**&#10;     * 查询指定行数据&#10;     *&#10;     * @param offset 查询起始位置&#10;     * @param limit 查询条数&#10;     * @return 对象列表&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; queryAllByLimit(@Param(&quot;offset&quot;) int offset, @Param(&quot;limit&quot;) int limit);&#10;&#10;&#10;    /**&#10;     * 通过实体作为筛选条件查询&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 对象列表&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; queryAll($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 影响行数&#10;     */&#10;    int insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 批量新增数据（MyBatis原生foreach方法）&#10;     *&#10;     * @param entities List&lt;$!{tableInfo.name}&gt; 实例对象列表&#10;     * @return 影响行数&#10;     */&#10;    int insertBatch(@Param(&quot;entities&quot;) List&lt;$!{tableInfo.name}&gt; entities);&#10;&#10;    /**&#10;     * 批量新增或按主键更新数据（MyBatis原生foreach方法）&#10;     *&#10;     * @param entities List&lt;$!{tableInfo.name}&gt; 实例对象列表&#10;     * @return 影响行数&#10;     */&#10;    int insertOrUpdateBatch(@Param(&quot;entities&quot;) List&lt;$!{tableInfo.name}&gt; entities);&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 影响行数&#10;     */&#10;    int update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 通过主键删除数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 影响行数&#10;     */&#10;    int deleteById($!pk.shortType $!pk.name);&#10;&#10;}&#10;" />
                    <option name="name" value="dao.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Service&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务接口&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 通过ID查询单条数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 实例对象&#10;     */&#10;    $!{tableInfo.name} queryById($!pk.shortType $!pk.name);&#10;&#10;    /**&#10;     * 查询多条数据&#10;     *&#10;     * @param offset 查询起始位置&#10;     * @param limit 查询条数&#10;     * @return 对象列表&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; queryAllByLimit(int offset, int limit);&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    $!{tableInfo.name} insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    $!{tableInfo.name} update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 通过主键删除数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 是否成功&#10;     */&#10;    boolean deleteById($!pk.shortType $!pk.name);&#10;&#10;}" />
                    <option name="name" value="service.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;ServiceImpl&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service/impl&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;&#10;import javax.annotation.Resource;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;@Service(&quot;$!tool.firstLowerCase($!{tableInfo.name})Service&quot;)&#10;public class $!{tableName} implements $!{tableInfo.name}Service {&#10;    @Resource&#10;    private $!{tableInfo.name}Dao $!tool.firstLowerCase($!{tableInfo.name})Dao;&#10;&#10;    /**&#10;     * 通过ID查询单条数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 实例对象&#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} queryById($!pk.shortType $!pk.name) {&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryById($!pk.name);&#10;    }&#10;&#10;    /**&#10;     * 查询多条数据&#10;     *&#10;     * @param offset 查询起始位置&#10;     * @param limit 查询条数&#10;     * @return 对象列表&#10;     */&#10;    @Override&#10;    public List&lt;$!{tableInfo.name}&gt; queryAllByLimit(int offset, int limit) {&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryAllByLimit(offset, limit);&#10;    }&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})) {&#10;        this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.insert($!tool.firstLowerCase($!{tableInfo.name}));&#10;        return $!tool.firstLowerCase($!{tableInfo.name});&#10;    }&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})) {&#10;        this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.update($!tool.firstLowerCase($!{tableInfo.name}));&#10;        return this.queryById($!{tool.firstLowerCase($!{tableInfo.name})}.get$!tool.firstUpperCase($pk.name)());&#10;    }&#10;&#10;    /**&#10;     * 通过主键删除数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 是否成功&#10;     */&#10;    @Override&#10;    public boolean deleteById($!pk.shortType $!pk.name) {&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.deleteById($!pk.name) &gt; 0;&#10;    }&#10;}" />
                    <option name="name" value="serviceImpl.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Controller&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/controller&quot;))&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import javax.annotation.Resource;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表控制层&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;@RestController&#10;@RequestMapping(&quot;$!tool.firstLowerCase($tableInfo.name)&quot;)&#10;public class $!{tableName} {&#10;    /**&#10;     * 服务对象&#10;     */&#10;    @Resource&#10;    private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;&#10;&#10;    /**&#10;     * 通过主键查询单条数据&#10;     *&#10;     * @param id 主键&#10;     * @return 单条数据&#10;     */&#10;    @GetMapping(&quot;selectOne&quot;)&#10;    public $!{tableInfo.name} selectOne($!pk.shortType id) {&#10;        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.queryById(id);&#10;    }&#10;&#10;}" />
                    <option name="name" value="controller.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;&#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{tableInfo.name}, &quot;Dao.xml&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/src/main/resources/mapper&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&#10;&lt;mapper namespace=&quot;$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao&quot;&gt;&#10;&#10;    &lt;resultMap type=&quot;$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}&quot; id=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;        &lt;result property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;#end&#10;    &lt;/resultMap&gt;&#10;&#10;    &lt;!--查询单个--&gt;&#10;    &lt;select id=&quot;queryById&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from $!{tableInfo.obj.parent.name}.$!tableInfo.obj.name&#10;        where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--查询指定行数据--&gt;&#10;    &lt;select id=&quot;queryAllByLimit&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from $!{tableInfo.obj.parent.name}.$!tableInfo.obj.name&#10;        limit #{offset}, #{limit}&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--通过实体作为筛选条件查询--&gt;&#10;    &lt;select id=&quot;queryAll&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from $!{tableInfo.obj.parent.name}.$!tableInfo.obj.name&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--新增所有列--&gt;&#10;    &lt;insert id=&quot;insert&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)&#10;        values (#foreach($column in $tableInfo.otherColumn)#{$!{column.name}}#if($velocityHasNext), #end#end)&#10;    &lt;/insert&gt;&#10;&#10;    &lt;insert id=&quot;insertBatch&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)&#10;        values&#10;        &lt;foreach collection=&quot;entities&quot; item=&quot;entity&quot; separator=&quot;,&quot;&gt;&#10;        (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)&#10;        &lt;/foreach&gt;&#10;    &lt;/insert&gt;&#10;&#10;    &lt;insert id=&quot;insertOrUpdateBatch&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)&#10;        values&#10;        &lt;foreach collection=&quot;entities&quot; item=&quot;entity&quot; separator=&quot;,&quot;&gt;&#10;            (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)&#10;        &lt;/foreach&gt;&#10;        on duplicate key update&#10;         #foreach($column in $tableInfo.otherColumn)$!column.obj.name = values($!column.obj.name) #if($velocityHasNext), #end#end&#10;    &lt;/insert&gt;&#10;&#10;    &lt;!--通过主键修改数据--&gt;&#10;    &lt;update id=&quot;update&quot;&gt;&#10;        update $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}&#10;        &lt;set&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                $!column.obj.name = #{$!column.name},&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/set&gt;&#10;        where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/update&gt;&#10;&#10;    &lt;!--通过主键删除--&gt;&#10;    &lt;delete id=&quot;deleteById&quot;&gt;&#10;        delete from $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name} where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/delete&gt;&#10;&#10;&lt;/mapper&gt;&#10;" />
                    <option name="name" value="mapper.xml" />
                  </Template>
                  <Template>
                    <option name="code" value="//调试表原始对象&#10;$!tool.debug($tableInfo.obj)&#10;&#10;//调试列原始对象&#10;$!tool.debug($tableInfo.fullColumn.get(0).obj)&#10;&#10;//调试列原始列类型&#10;$!tool.debug($tableInfo.fullColumn.get(0).obj.dataType)&#10;&#10;//获取原始列类型中的字段&#10;sqlType = $!tool.getField($tableInfo.fullColumn.get(0).obj.dataType, &quot;typeName&quot;)&#10;&#10;//执行原始列类型中的方法&#10;sqlTypeLen = $!tableInfo.fullColumn.get(0).obj.dataType.getLength()&#10;" />
                    <option name="name" value="debug.json" />
                  </Template>
                </list>
              </option>
              <option name="name" value="Default" />
            </TemplateGroup>
          </value>
        </entry>
        <entry key="MybatisPlus">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;entity&quot;)&#10;&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;import com.baomidou.mybatisplus.extension.activerecord.Model;&#10;import java.io.Serializable;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表实体类&quot;)&#10;@SuppressWarnings(&quot;serial&quot;)&#10;public class $!{tableInfo.name} extends Model&lt;$!{tableInfo.name}&gt; {&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})//${column.comment}#end&#10;&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;&#10;#foreach($column in $tableInfo.fullColumn)&#10;#getSetMethod($column)&#10;#end&#10;&#10;#foreach($column in $tableInfo.pkColumn)&#10;    /**&#10;     * 获取主键值&#10;     *&#10;     * @return 主键值&#10;     */&#10;    @Override&#10;    protected Serializable pkVal() {&#10;        return this.$!column.name;&#10;    }&#10;    #break&#10;#end&#10;}" />
                    <option name="name" value="entity" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Dao&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/dao&quot;, &quot;Dao.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;dao&quot;)&#10;&#10;import com.baomidou.mybatisplus.core.mapper.BaseMapper;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表数据库访问层&quot;)&#10;public interface $!{tableName} extends BaseMapper&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="dao" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Service&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service&quot;, &quot;Service.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;import com.baomidou.mybatisplus.extension.service.IService;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务接口&quot;)&#10;public interface $!{tableName} extends IService&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="service" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;ServiceImpl&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service/impl&quot;, &quot;ServiceImpl.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service.impl&quot;)&#10;&#10;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;&#10;import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务实现类&quot;)&#10;@Service(&quot;$!tool.firstLowerCase($tableInfo.name)Service&quot;)&#10;public class $!{tableName} extends ServiceImpl&lt;$!{tableInfo.name}Dao, $!{tableInfo.name}&gt; implements $!{tableInfo.name}Service {&#10;&#10;}" />
                    <option name="name" value="serviceImpl" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Controller&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/controller&quot;, &quot;Controller.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;controller&quot;)&#10;&#10;##定义服务名&#10;#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), &quot;Service&quot;))&#10;&#10;##定义实体对象名&#10;#set($entityName = $!tool.firstLowerCase($!tableInfo.name))&#10;&#10;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;&#10;import com.baomidou.mybatisplus.extension.api.ApiController;&#10;import com.baomidou.mybatisplus.extension.api.R;&#10;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import javax.annotation.Resource;&#10;import java.io.Serializable;&#10;import java.util.List;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表控制层&quot;)&#10;@RestController&#10;@RequestMapping(&quot;$!tool.firstLowerCase($!tableInfo.name)&quot;)&#10;public class $!{tableName} extends ApiController {&#10;    /**&#10;     * 服务对象&#10;     */&#10;    @Resource&#10;    private $!{tableInfo.name}Service $!{serviceName};&#10;&#10;    /**&#10;     * 分页查询所有数据&#10;     *&#10;     * @param page 分页对象&#10;     * @param $!entityName 查询实体&#10;     * @return 所有数据&#10;     */&#10;    @GetMapping&#10;    public R selectAll(Page&lt;$!tableInfo.name&gt; page, $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.page(page, new QueryWrapper&lt;&gt;($!entityName)));&#10;    }&#10;&#10;    /**&#10;     * 通过主键查询单条数据&#10;     *&#10;     * @param id 主键&#10;     * @return 单条数据&#10;     */&#10;    @GetMapping(&quot;{id}&quot;)&#10;    public R selectOne(@PathVariable Serializable id) {&#10;        return success(this.$!{serviceName}.getById(id));&#10;    }&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!entityName 实体对象&#10;     * @return 新增结果&#10;     */&#10;    @PostMapping&#10;    public R insert(@RequestBody $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.save($!entityName));&#10;    }&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!entityName 实体对象&#10;     * @return 修改结果&#10;     */&#10;    @PutMapping&#10;    public R update(@RequestBody $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.updateById($!entityName));&#10;    }&#10;&#10;    /**&#10;     * 删除数据&#10;     *&#10;     * @param idList 主键结合&#10;     * @return 删除结果&#10;     */&#10;    @DeleteMapping&#10;    public R delete(@RequestParam(&quot;idList&quot;) List&lt;Long&gt; idList) {&#10;        return success(this.$!{serviceName}.removeByIds(idList));&#10;    }&#10;}" />
                    <option name="name" value="controller" />
                  </Template>
                </list>
              </option>
              <option name="name" value="MybatisPlus" />
            </TemplateGroup>
          </value>
        </entry>
        <entry key="yhaf-6-21">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;  &#10;##保存文件（宏定义）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;  &#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;entity&quot;)&#10;  &#10;##自动导入包（全局变量）&#10;$!autoImport&#10;import lombok.Getter;&#10;import lombok.NoArgsConstructor;&#10;import lombok.Setter;&#10;  &#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})实体类&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@Getter&#10;@Setter&#10;@NoArgsConstructor&#10;public class $!{tableInfo.name} {&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})/**&#10;    * ${column.comment}&#10;    */#end&#10;  &#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;}" />
                    <option name="name" value="entity" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/dto&quot;, &quot;DTO.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;dto&quot;)&#10;&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;import lombok.Getter;&#10;import lombok.NoArgsConstructor;&#10;import lombok.Setter;&#10;&#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})数据传输类&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@Getter&#10;@Setter&#10;@NoArgsConstructor&#10;public class $!{tableInfo.name}DTO {&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})/**&#10;    * ${column.comment}&#10;    */#end&#10;    &#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;}" />
                    <option name="name" value="dto" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;    &#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;DAO&quot;)&#10;    &#10;##保存文件（宏定义）&#10;#save(&quot;/dao&quot;, &quot;DAO.java&quot;)&#10;    &#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;dao&quot;)&#10;    &#10;import com.baomidou.mybatisplus.core.mapper.BaseMapper;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;import org.apache.ibatis.annotations.Param;&#10;import java.util.List;&#10;    &#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})数据库访问层&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;public interface $!{tableName} extends BaseMapper&lt;$!tableInfo.name&gt; {&#10;       /**&#10;       * 通过ID查询单条数据&#10;         *&#10;         * @param $!pk.name 主键&#10;         * @return 实例对象&#10;         */&#10;        $!{tableInfo.name} queryById($!pk.shortType $!pk.name);&#10;    &#10;        /**&#10;         * 查询指定行数据&#10;         *&#10;         * @param offset 查询起始位置&#10;         * @param limit 查询条数&#10;         * @return 对象列表&#10;         */&#10;        List&lt;$!{tableInfo.name}&gt; queryAllByLimit(@Param(&quot;offset&quot;) int offset, @Param(&quot;limit&quot;) int limit);&#10;        /**&#10;       * 通过实体作为筛选条件查询&#10;       *&#10;       * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;       * @return 对象列表&#10;       */&#10;    List&lt;$!{tableInfo.name}&gt; queryAll($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;      &#10;      /**&#10;       * 新增数据&#10;     *&#10;       * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;       * @return 影响行数&#10;     */&#10;      int insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;      &#10;    /**&#10;       * 修改数据&#10;       *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;       * @return 影响行数&#10;       */&#10;      int update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;      &#10;      /**&#10;     * 通过主键删除数据&#10;       *&#10;       * @param $!pk.name 主键&#10;       * @return 影响行数&#10;       */&#10;      int deleteById($!pk.shortType $!pk.name);&#10;}" />
                    <option name="name" value="dao" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;  &#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;BOImpl&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/bo/impl&quot;, &quot;BOImpl.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;bo.impl&quot;)&#10;&#10;  import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}DAO;&#10;  import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;  import org.springframework.stereotype.Service;&#10;  import org.springframework.transaction.annotation.Transactional;&#10;import com.yhtech.yhaf.data.mp.bo.impl.BaseBOImpl;&#10;&#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})服务实现类&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@Service&#10;  @Transactional(rollbackFor = Exception.class)&#10;  public class $!{tableName} extends BaseBOImpl&lt;$!{tableInfo.name}DAO, $!{tableInfo.name}&gt; implements I$!{tableInfo.name}BO {&#10;}" />
                    <option name="name" value="bo_service_impl" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;  &#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;BO&quot;)&#10;  &#10;&#10;  &#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;bo&quot;)&#10;  &#10;$!callback.setFileName($tool.append(&quot;I&quot;,$!{tableInfo.name},&quot;BO.java&quot;))&#10;  $!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/bo&quot;))&#10;  import com.yhtech.yhaf.data.mp.bo.IBaseBO;&#10;  import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;  &#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})服务接口&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;public interface I$!{tableName} extends IBaseBO&lt;$!tableInfo.name&gt; {&#10;  &#10;}&#10;" />
                    <option name="name" value="bo_service" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;  &#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{tableInfo.name}, &quot;-mapper.xml&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/src/main/resources/mapper&quot;))&#10;  &#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;  &#10;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;  &lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&#10;  &lt;mapper namespace=&quot;$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}DAO&quot;&gt;&#10;  &#10;      &lt;resultMap type=&quot;$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}&quot; id=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;  #foreach($column in $tableInfo.fullColumn)&#10;          &lt;result property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;  #end&#10;      &lt;/resultMap&gt;&#10;  &#10;      &lt;!--查询单个--&gt;&#10;      &lt;select id=&quot;queryById&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;          select&#10;            #allSqlColumn()&#10;  &#10;          from $!tableInfo.obj.name&#10;          where $!pk.obj.name = #{$!pk.name}&#10;      &lt;/select&gt;&#10;  &#10;      &lt;!--查询指定行数据--&gt;&#10;      &lt;select id=&quot;queryAllByLimit&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;          select&#10;            #allSqlColumn()&#10;  &#10;          from $!tableInfo.obj.name&#10;          limit #{offset}, #{limit}&#10;      &lt;/select&gt;&#10;  &#10;      &lt;!--通过实体作为筛选条件查询--&gt;&#10;      &lt;select id=&quot;queryAll&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;          select&#10;            #allSqlColumn()&#10;  &#10;          from $!tableInfo.obj.name&#10;          &lt;where&gt;&#10;  #foreach($column in $tableInfo.fullColumn)&#10;              &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                  and $!column.obj.name = #{$!column.name}&#10;              &lt;/if&gt;&#10;  #end&#10;          &lt;/where&gt;&#10;      &lt;/select&gt;&#10;  &#10;      &lt;!--新增所有列--&gt;&#10;      &lt;insert id=&quot;insert&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;          insert into $!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)&#10;          values (#foreach($column in $tableInfo.otherColumn)#{$!{column.name}}#if($velocityHasNext), #end#end)&#10;      &lt;/insert&gt;&#10;  &#10;      &lt;!--通过主键修改数据--&gt;&#10;      &lt;update id=&quot;update&quot;&gt;&#10;          update $!{tableInfo.obj.name}&#10;          &lt;set&gt;&#10;  #foreach($column in $tableInfo.otherColumn)&#10;              &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                  $!column.obj.name = #{$!column.name},&#10;              &lt;/if&gt;&#10;  #end&#10;          &lt;/set&gt;&#10;          where $!pk.obj.name = #{$!pk.name}&#10;      &lt;/update&gt;&#10;  &#10;      &lt;!--通过主键删除--&gt;&#10;      &lt;delete id=&quot;deleteById&quot;&gt;&#10;          delete from $!{tableInfo.obj.name} where $!pk.obj.name = #{$!pk.name}&#10;      &lt;/delete&gt;&#10;  &#10;  &lt;/mapper&gt;" />
                    <option name="name" value="mapper" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/entity&quot;, &quot;BOCovert.java&quot;)&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;BOCovert&quot;)&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;entity&quot;)&#10;&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;&#10;import $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;&#10;import org.springframework.beans.BeanUtils;&#10;import org.springframework.stereotype.Component;&#10;&#10;&#10;@Component&#10;public class $!{tableInfo.name}BOCovert {&#10;&#10;&#10;    public $!{tableInfo.name} convert2DO($!{tableInfo.name}DTO dto) {&#10;        $!{tableInfo.name} entity = new $!{tableInfo.name}();&#10;        BeanUtils.copyProperties(dto, entity);&#10;        return entity;&#10;    }&#10;&#10;    public $!{tableInfo.name}DTO convert2DTO($!{tableInfo.name} entity) {&#10;        $!{tableInfo.name}DTO dto = new $!{tableInfo.name}DTO();&#10;        BeanUtils.copyProperties(entity, dto);&#10;        return dto;&#10;    }&#10;}" />
                    <option name="name" value="entityCovert" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;##导入宏定义&#10;$!define&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;$!callback.setFileName($tool.append(&quot;I&quot;,$!{tableInfo.name},&quot;Service.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;import com.yhtech.yhaf.core.annotation.ServiceMethod;&#10;import com.yhtech.yhaf.core.annotation.ServiceModule;&#10;import com.yhtech.yhaf.core.annotation.ServiceParam;&#10;import com.yhtech.yhaf.core.dto.YhafPage;&#10;import com.yhtech.yhaf.core.dto.YhafPageRequest;&#10;import $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;&#10;import java.io.Serializable;&#10;&#10;@ServiceModule(&quot;sample.$!{tableInfo.name}&quot;)&#10;public interface I$!{tableInfo.name}Service {&#10;&#10;    @ServiceMethod(&quot;getOne&quot;)&#10;    $!{tableInfo.name}DTO getOne(@ServiceParam(&quot;id&quot;) Serializable id);&#10;&#10;    @ServiceMethod(&quot;save&quot;)&#10;    void save($!{tableInfo.name}DTO entity);&#10;&#10;    @ServiceMethod(&quot;remove&quot;)&#10;    void remove(@ServiceParam(&quot;$!{pk.name}&quot;) Serializable $!{pk.name});&#10;&#10;&#10;}" />
                    <option name="name" value="api_service" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;##导入宏定义&#10;$!define&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;$!callback.setFileName($tool.append($!{tableInfo.name},&quot;ServiceImpl.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;&#10;import $!{tableInfo.savePackageName}.bo.I$!{tableInfo.name}BO;&#10;import $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}BOCovert;&#10;import $!{tableInfo.savePackageName}.service.I$!{tableInfo.name}Service;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Service;&#10;import java.io.Serializable;&#10;&#10;@Service&#10;public class $!{tableInfo.name}ServiceImpl implements I$!{tableInfo.name}Service {&#10;&#10;    @Autowired&#10;    private I$!{tableInfo.name}BO bo;&#10;    @Autowired&#10;    private $!{tableInfo.name}BOCovert covert;&#10;&#10;    @Override&#10;    public $!{tableInfo.name}DTO getOne(Serializable id) {&#10;        return covert.convert2DTO(bo.getById(id));&#10;    }&#10;&#10;    @Override&#10;    public void save($!{tableInfo.name}DTO entity) {&#10;        bo.save(covert.convert2DO(entity));&#10;    }&#10;&#10;    @Override&#10;    public void remove(Serializable $!{pk.name}) {&#10;        bo.removeById($!{pk.name});&#10;    }&#10;&#10;}&#10;" />
                    <option name="name" value="api_service_impl" />
                  </Template>
                </list>
              </option>
              <option name="name" value="yhaf-6-21" />
            </TemplateGroup>
          </value>
        </entry>
        <entry key="yhaf-6-21 plus">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;  &#10;##保存文件（宏定义）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;  &#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;entity&quot;)&#10;  &#10;##自动导入包（全局变量）&#10;$!autoImport&#10;import lombok.Getter;&#10;import lombok.NoArgsConstructor;&#10;import lombok.Setter;&#10;  &#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})实体类&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@Getter&#10;@Setter&#10;@NoArgsConstructor&#10;public class $!{tableInfo.name} {&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})/**&#10;    * ${column.comment}&#10;    */#end&#10;  &#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;}" />
                    <option name="name" value="entity" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/dto&quot;, &quot;DTO.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;dto&quot;)&#10;&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;import lombok.Getter;&#10;import lombok.NoArgsConstructor;&#10;import lombok.Setter;&#10;import io.swagger.annotations.ApiModel;&#10;import io.swagger.annotations.ApiModelProperty;&#10;&#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})数据传输类&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@Getter&#10;@Setter&#10;@NoArgsConstructor&#10;@ApiModel(&quot;${tableInfo.comment}(${tableInfo.obj.name})数据传输类&quot;)&#10;public class $!{tableInfo.name}DTO {&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})/**&#10;    * ${column.comment}&#10;    */#end&#10;    &#10;    @ApiModelProperty(&quot;${column.comment}&quot;)&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;}" />
                    <option name="name" value="dto" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;    &#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;DAO&quot;)&#10;    &#10;##保存文件（宏定义）&#10;#save(&quot;/dao&quot;, &quot;DAO.java&quot;)&#10;    &#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;dao&quot;)&#10;    &#10;import com.baomidou.mybatisplus.core.mapper.BaseMapper;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;import org.apache.ibatis.annotations.Param;&#10;import java.util.List;&#10;    &#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})数据库访问层&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;public interface $!{tableName} extends BaseMapper&lt;$!tableInfo.name&gt; {&#10;      &#10;}" />
                    <option name="name" value="dao" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;  &#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{tableInfo.name}, &quot;-mapper.xml&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/src/main/resources/mapper&quot;))&#10;  &#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;  &#10;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;  &lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&#10;  &lt;mapper namespace=&quot;$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}DAO&quot;&gt;&#10;  &#10;  &lt;!-- 通用查询映射结果 --&gt;&#10;      &lt;resultMap id=&quot;BaseResultMap&quot; type=&quot;$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}&quot;&gt;&#10;  #foreach($column in $tableInfo.fullColumn)&#10;          &lt;result property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;  #end&#10;      &lt;/resultMap&gt;&#10;      &#10;  &lt;!-- 通用查询结果列 --&gt;   &#10;    &lt;sql id=&quot;Base_Column_List&quot;&gt;&#10;      #foreach($column in $tableInfo.fullColumn)$!column.obj.name#if($velocityHasNext),#end#end&#10;      &#10;    &lt;/sql&gt;&#10;  &#10;  &lt;/mapper&gt;" />
                    <option name="name" value="mapper" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;  &#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;BO&quot;)&#10;  &#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;bo&quot;)&#10;  &#10;$!callback.setFileName($tool.append(&quot;I&quot;,$!{tableInfo.name},&quot;BO.java&quot;))&#10;  $!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/bo&quot;))&#10;  import com.yhtech.yhaf.data.mp.bo.IBaseBO;&#10;  import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;  &#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})通用业务服务接口&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;public interface I$!{tableName} extends IBaseBO&lt;$!tableInfo.name&gt; {&#10;  &#10;}&#10;" />
                    <option name="name" value="bo_service" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;  &#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;BOImpl&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/bo/impl&quot;, &quot;BOImpl.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;bo.impl&quot;)&#10;&#10;  import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}DAO;&#10;  import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;  import org.springframework.stereotype.Service;&#10;  import org.springframework.transaction.annotation.Transactional;&#10;import com.yhtech.yhaf.data.mp.bo.impl.BaseBOImpl;&#10;import $!{tableInfo.savePackageName}.bo.I$!{tableInfo.name}BO;&#10;&#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})通用业务服务实现类&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@Service&#10;@Transactional(readOnly = true)&#10;public class $!{tableName} extends BaseBOImpl&lt;$!{tableInfo.name}DAO, $!{tableInfo.name}&gt; implements I$!{tableInfo.name}BO {&#10;  &#10;}" />
                    <option name="name" value="bo_service_impl" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;##导入宏定义&#10;$!define&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;$!callback.setFileName($tool.append(&quot;I&quot;,$!{tableInfo.name},&quot;Service.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;import com.yhtech.yhaf.core.annotation.YhafService;&#10;import com.yhtech.yhaf.core.annotation.ServiceMethod;&#10;import com.yhtech.yhaf.core.annotation.ServiceParam;&#10;import com.yhtech.yhaf.core.dto.YhafPage;&#10;import com.yhtech.yhaf.core.dto.YhafPageRequest;&#10;import $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;&#10;import java.io.Serializable;&#10;&#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})服务接口&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@YhafService(value = &quot;$!{tableInfo.name}Service&quot;,exposed = true)&#10;public interface I$!{tableInfo.name}Service {&#10;&#10;    /**&#10;     * 根据主键查询&#10;     * @param id&#10;     * @return&#10;     */&#10;    @ServiceMethod(&quot;getById&quot;)&#10;    $!{tableInfo.name}DTO getById(@ServiceParam(&quot;id&quot;) $!pk.shortType id);&#10;&#10;    /**&#10;     * 对象修改&#10;     * @param entity&#10;     */&#10;    @ServiceMethod(&quot;updateById&quot;)&#10;    void updateById($!{tableInfo.name}DTO entity);&#10;&#10;    /**&#10;     * 根据主键删除&#10;     * @param id&#10;     */&#10;    @ServiceMethod(&quot;removeById&quot;)&#10;    void removeById(@ServiceParam(&quot;id&quot;) $!pk.shortType id);&#10;    &#10;    /**&#10;     * 对象新增&#10;     * @param entity&#10;     */&#10;    @ServiceMethod(&quot;save&quot;)&#10;    void save($!{tableInfo.name}DTO entity);&#10;&#10;}" />
                    <option name="name" value="api_service" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;##导入宏定义&#10;$!define&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;$!callback.setFileName($tool.append($!{tableInfo.name},&quot;ServiceImpl.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;&#10;import $!{tableInfo.savePackageName}.bo.I$!{tableInfo.name}BO;&#10;import $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.convert.$!{tableInfo.name}ConvertMapper;&#10;import $!{tableInfo.savePackageName}.service.I$!{tableInfo.name}Service;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Service;&#10;import java.io.Serializable;&#10;&#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})服务实现类&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@Service&#10;public class $!{tableInfo.name}ServiceImpl implements I$!{tableInfo.name}Service {&#10;&#10;    @Autowired&#10;    private I$!{tableInfo.name}BO bo;&#10;    &#10;    @Autowired&#10;    private $!{tableInfo.name}ConvertMapper convert;&#10;&#10;    @Override&#10;    public $!{tableInfo.name}DTO getById($!pk.shortType $!{pk.name}) {&#10;        return convert.convert2DTO(bo.getById($!{pk.name}));&#10;    }&#10;&#10;    @Override&#10;    public void updateById($!{tableInfo.name}DTO entity) {&#10;        bo.updateById(convert.convert2DO(entity));&#10;    }&#10;&#10;    @Override&#10;    public void removeById($!pk.shortType $!{pk.name}) {&#10;        bo.removeById($!{pk.name});&#10;    }&#10;    &#10;    @Override&#10;    public void save($!{tableInfo.name}DTO entity) {&#10;        bo.save(convert.convert2DO(entity));&#10;    }&#10; &#10;}&#10;" />
                    <option name="name" value="api_service_impl" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;##导入宏定义&#10;$!define&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;convert&quot;)&#10;&#10;$!callback.setFileName($tool.append(&quot;&quot;,$!{tableInfo.name},&quot;ConvertMapper.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/convert&quot;))&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;&#10;import $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import org.mapstruct.*;&#10;import org.mapstruct.factory.Mappers;&#10;import org.springframework.stereotype.Component;&#10;&#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})实体转换接口&#10;* 修改后请 mvn compile 确保生成实现类&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@Mapper(componentModel=&quot;spring&quot;)&#10;public interface $!{tableInfo.name}ConvertMapper {&#10;&#10;    /**&#10;     * convert2DO&#10;     * @param dto&#10;     * @return&#10;     */&#10;    $!{tableInfo.name} convert2DO($!{tableInfo.name}DTO dto);&#10;&#10;    /**&#10;     * convert2DTO&#10;     * @param entity&#10;     * @return&#10;     */&#10;    $!{tableInfo.name}DTO convert2DTO($!{tableInfo.name} entity);&#10;    &#10;}" />
                    <option name="name" value="convert_mapper" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;##导入宏定义&#10;$!define&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;$!callback.setFileName($tool.append(&quot;I&quot;,$!{tableInfo.name},&quot;Service.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;import com.yhtech.yhaf.core.annotation.YhafService;&#10;import com.yhtech.yhaf.core.annotation.ServiceMethod;&#10;import com.yhtech.yhaf.core.annotation.ServiceParam;&#10;import com.yhtech.yhaf.core.dto.YhafPage;&#10;import com.yhtech.yhaf.core.dto.YhafPageRequest;&#10;import $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;&#10;import com.yhtech.yhaf.core.dto.YhafPage;&#10;import com.yhtech.yhaf.core.dto.YhafPageRequest;&#10;import java.io.Serializable;&#10;import java.util.ArrayList;&#10;&#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})服务接口&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@YhafService(value = &quot;$!{tableInfo.name}Service&quot;,exposed = true)&#10;public interface I$!{tableInfo.name}Service {&#10;&#10;    /**&#10;     * 分页条件查询&#10;     * @param pageRequest&#10;     * @param dto&#10;     * @return&#10;     */&#10;    @ServiceMethod(&quot;getPage&quot;)&#10;    YhafPage&lt;$!{tableInfo.name}DTO&gt; getPage(YhafPageRequest pageRequest,$!{tableInfo.name}DTO dto);&#10;&#10;    /**&#10;     * 根据主键查询&#10;     * @param id&#10;     * @return&#10;     */&#10;    @ServiceMethod(&quot;getById&quot;)&#10;    $!{tableInfo.name}DTO getById(@ServiceParam(&quot;id&quot;) $!pk.shortType id);&#10;&#10;    /**&#10;     * 对象修改&#10;     * @param entity&#10;     */&#10;    @ServiceMethod(&quot;updateById&quot;)&#10;    void updateById($!{tableInfo.name}DTO entity);&#10;&#10;    /**&#10;     * 根据主键删除&#10;     * @param id&#10;     */&#10;    @ServiceMethod(&quot;removeById&quot;)&#10;    void removeById(@ServiceParam(&quot;id&quot;) $!pk.shortType id);&#10;    &#10;    /**&#10;     * 对象新增&#10;     * @param entity&#10;     */&#10;    @ServiceMethod(&quot;save&quot;)&#10;    void save($!{tableInfo.name}DTO entity);&#10;&#10;}" />
                    <option name="name" value="api_service(page)" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;##导入宏定义&#10;$!define&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;$!callback.setFileName($tool.append($!{tableInfo.name},&quot;ServiceImpl.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;&#10;import $!{tableInfo.savePackageName}.bo.I$!{tableInfo.name}BO;&#10;import $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.convert.$!{tableInfo.name}ConvertMapper;&#10;import com.yhtech.yhaf.core.dto.YhafPage;&#10;import com.yhtech.yhaf.core.dto.YhafPageRequest;&#10;import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;&#10;import $!{tableInfo.savePackageName}.service.I$!{tableInfo.name}Service;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Service;&#10;import java.io.Serializable;&#10;import java.util.ArrayList;&#10;&#10;##表注释（自定义）&#10;/**&#10;* ${tableInfo.comment}(${tableInfo.obj.name})服务实现类&#10;* &#10;* @author $author&#10;* @since ${time.currTime(&quot;yyyy-MM-dd HH:mm:ss&quot;)}&#10;*/&#10;@Service&#10;public class $!{tableInfo.name}ServiceImpl implements I$!{tableInfo.name}Service {&#10;&#10;    @Autowired&#10;    private I$!{tableInfo.name}BO bo;&#10;    &#10;    @Autowired&#10;    private $!{tableInfo.name}ConvertMapper convert;&#10;    &#10;    @Override&#10;    public YhafPage&lt;$!{tableInfo.name}DTO&gt; getPage(YhafPageRequest pageRequest, $!{tableInfo.name}DTO dto) {&#10;        $!{tableInfo.name} entity = convert.convert2DO(dto);&#10;        LambdaQueryWrapper&lt;$!{tableInfo.name}&gt; wrapper = new LambdaQueryWrapper&lt;&gt;(entity);&#10;        YhafPage&lt;$!{tableInfo.name}&gt; resulPage = bo.page(pageRequest, wrapper);&#10;        ArrayList&lt;$!{tableInfo.name}DTO&gt; resultList = new ArrayList&lt;$!{tableInfo.name}DTO&gt;();&#10;        resulPage.getContent().forEach(i -&gt; resultList.add(convert.convert2DTO(i)));&#10;        YhafPage&lt;$!{tableInfo.name}DTO&gt; yhafPage = new YhafPage&lt;&gt;(pageRequest, resultList, resulPage.getTotalElements());&#10;        return yhafPage;&#10;    }&#10;&#10;    @Override&#10;    public $!{tableInfo.name}DTO getById($!pk.shortType $!{pk.name}) {&#10;        return convert.convert2DTO(bo.getById($!{pk.name}));&#10;    }&#10;&#10;    @Override&#10;    public void updateById($!{tableInfo.name}DTO entity) {&#10;        bo.updateById(convert.convert2DO(entity));&#10;    }&#10;&#10;    @Override&#10;    public void removeById($!pk.shortType $!{pk.name}) {&#10;        bo.removeById($!{pk.name});&#10;    }&#10;    &#10;    @Override&#10;    public void save($!{tableInfo.name}DTO entity) {&#10;        bo.save(convert.convert2DO(entity));&#10;    }&#10; &#10;}&#10;" />
                    <option name="name" value="api_service_impl(page)" />
                  </Template>
                </list>
              </option>
              <option name="name" value="yhaf-6-21 plus" />
            </TemplateGroup>
          </value>
        </entry>
      </map>
    </option>
  </component>
</application>